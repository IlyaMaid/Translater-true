import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart, Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, BotCommand
from deep_translator import GoogleTranslator

API_TOKEN = "7710002190:AAFkqfdSMsEYFBCUEd_kruCMQYTvm_7_bzU"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω

bot = Bot(token=API_TOKEN)
dp = Dispatcher()
translator = GoogleTranslator()
user_directions = {}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
language_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–†—É—Å—Å–∫–∏–π ‚Üí –¢—É—Ä–µ—Ü–∫–∏–π")],
        [KeyboardButton(text="–¢—É—Ä–µ—Ü–∫–∏–π ‚Üí –†—É—Å—Å–∫–∏–π")],
        [KeyboardButton(text="–ü–æ–º–æ—â—å"), KeyboardButton(text="–û –ø—Ä–æ–µ–∫—Ç–µ")]
    ],
    resize_keyboard=True,
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ"
)

# /start
@dp.message(CommandStart())
async def cmd_start(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ä—É—Å—Å–∫–æ-—Ç—É—Ä–µ—Ü–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞:",
        reply_markup=language_keyboard
    )

# /help –∏ –∫–Ω–æ–ø–∫–∞ "–ü–æ–º–æ—â—å"
@dp.message(Command("help"))
@dp.message(lambda msg: msg.text.lower() == "–ø–æ–º–æ—â—å")
async def help_command(message: types.Message):
    await message.answer(
        "üìå *–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:*\n"
        "1. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –∫–Ω–æ–ø–∫–æ–π.\n"
        "2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç, –∏ —è –ø–µ—Ä–µ–≤–µ–¥—É –µ–≥–æ.\n\n"
        "üõ† –ö–æ–º–∞–Ω–¥—ã:\n"
        "/start ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫\n"
        "/help ‚Äî –ø–æ–º–æ—â—å\n"
        "/about ‚Äî –æ –ø—Ä–æ–µ–∫—Ç–µ",
        parse_mode="Markdown"
    )

# /about –∏ –∫–Ω–æ–ø–∫–∞ "–û –ø—Ä–æ–µ–∫—Ç–µ"
@dp.message(Command("about"))
@dp.message(lambda msg: msg.text.lower() == "–æ –ø—Ä–æ–µ–∫—Ç–µ")
async def about_command(message: types.Message):
    await message.answer(
        "‚ÑπÔ∏è *–û –ø—Ä–æ–µ–∫—Ç–µ:*\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –º–µ–∂–¥—É —Ä—É—Å—Å–∫–∏–º –∏ —Ç—É—Ä–µ—Ü–∫–∏–º —è–∑—ã–∫–∞–º–∏.\n"
        "–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Python, aiogram –∏ Google Translate.\n"
        "–ë–æ—Ç –Ω–µ —Ö—Ä–∞–Ω–∏—Ç –¥–∞–Ω–Ω—ã–µ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ.",
        parse_mode="Markdown"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
@dp.message(lambda msg: msg.text in ["–†—É—Å—Å–∫–∏–π ‚Üí –¢—É—Ä–µ—Ü–∫–∏–π", "–¢—É—Ä–µ—Ü–∫–∏–π ‚Üí –†—É—Å—Å–∫–∏–π"])
async def choose_direction(message: types.Message):
    user_directions[message.from_user.id] = message.text
    await message.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {message.text}. –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞.")

# –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
@dp.message()
async def translate_text(message: types.Message):
    direction = user_directions.get(message.from_user.id)
    if not direction:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞:", reply_markup=language_keyboard)
        return

    src, dest = ("ru", "tr") if direction == "–†—É—Å—Å–∫–∏–π ‚Üí –¢—É—Ä–µ—Ü–∫–∏–π" else ("tr", "ru")

    try:
        translated_text = GoogleTranslator(source=src, target=dest).translate(message.text)
        await message.answer(f"üìç –ü–µ—Ä–µ–≤–æ–¥:\n{translated_text}")
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ: {e}")

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –≤ Telegram –º–µ–Ω—é
async def set_commands(bot: Bot):
    commands = [
        BotCommand(command="start", description="–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"),
        BotCommand(command="help", description="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"),
        BotCommand(command="about", description="–û –ø—Ä–æ–µ–∫—Ç–µ"),
    ]
    await bot.set_my_commands(commands)

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
async def main():
    print("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞...")
    await set_commands(bot)
    print("–ù–∞—á–∞–ª–æ –æ–ø—Ä–æ—Å–∞...")
    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()  # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–µ—Å—Å–∏–∏ aiohttp
        print("–°–µ—Å—Å–∏—è –±–æ—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∞.")


if __name__ == "__main__":
    asyncio.run(main())